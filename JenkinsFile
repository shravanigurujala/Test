pipeline {
    agent any

    environment {
        AWS_REGION = 'ap-south-1'
    }

    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'main', url: 'https://github.com/shravanigurujala/Test.git'
            }
        }

        stage('Terraform Init & Apply') {
            steps {
                dir('terraform') {
                    sh '''
                    terraform init
                    terraform apply -auto-approve
                    '''
                }
            }
        }

        stage('Update Ansible Inventory') {
            steps {
                script {
                    def public_ip = sh(script: "cd terraform && terraform output -raw public_ip", returnStdout: true).trim()
                    sh "echo '[web]\\n${public_ip} ansible_user=ubuntu ansible_ssh_private_key_file=~/.ssh/your-keypair.pem' > ansible/inventory.ini"
                }
            }
        }

        stage('Run Ansible Playbook') {
            steps {
                sh '''
                cd ansible
                ansible-playbook -i inventory.ini setup.yml
                '''
            }
        }

        stage('Health Check') {
            steps {
                script {
                    def public_ip = sh(script: "cd terraform && terraform output -raw public_ip", returnStdout: true).trim()
                    sh "sed -i 's|<EC2_PUBLIC_IP>|${public_ip}|g' scripts/health_check.py"
                    sh 'python3 scripts/health_check.py'
                }
            }
        }

        stage('Notify Status') {
            steps {
                echo "✅ Infrastructure and Application deployed successfully!"
            }
        }
    }

    post {
        failure {
            echo "❌ Pipeline failed. Check Jenkins logs for details."
        }
        always {
            echo "Pipeline execution complete."
        }
    }
}
